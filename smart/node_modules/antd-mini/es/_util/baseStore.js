"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseStore = void 0;
var BaseStore = /** @class */ (function () {
    function BaseStore() {
        this.itemsMap = {};
    }
    BaseStore.prototype.addItem = function (uid, id, value) {
        this.addGroup(uid);
        this.setItem(uid, id, value);
    };
    BaseStore.prototype.addGroup = function (uid) {
        if (!this.itemsMap[uid]) {
            this.itemsMap[uid] = {
                items: {},
                onChange: null,
                // eslint-disable-next-line @typescript-eslint/no-empty-function
                getGroupPropsVal: function () { },
                // eslint-disable-next-line @typescript-eslint/no-empty-function
                setGroupDataVal: function () { },
            };
        }
    };
    BaseStore.prototype.removeItem = function (uid, id) {
        if (this.itemsMap[uid] && this.itemsMap[uid].items && this.getItem(uid, id)) {
            this.setItem(uid, id, null);
        }
    };
    BaseStore.prototype.removeGroup = function (uid) {
        if (this.itemsMap[uid]) {
            this.itemsMap[uid] = null;
        }
    };
    BaseStore.prototype.updateGroupUID = function (oldUID, newUID) {
        if (this.itemsMap[oldUID]) {
            this.itemsMap[newUID] = this.itemsMap[oldUID];
            this.itemsMap[oldUID] = null;
        }
    };
    BaseStore.prototype.setGroupPropsVal = function (uid, getGroupPropsVal) {
        if (this.itemsMap[uid]) {
            this.itemsMap[uid].getGroupPropsVal = getGroupPropsVal;
        }
    };
    BaseStore.prototype.setGroupDataVal = function (uid, setGroupDataVal) {
        if (this.itemsMap[uid]) {
            this.itemsMap[uid].setGroupDataVal = setGroupDataVal;
        }
    };
    BaseStore.prototype.getGroupDataVal = function (uid, getGroupDataVal) {
        if (this.itemsMap[uid]) {
            this.itemsMap[uid].getGroupDataVal = getGroupDataVal;
        }
    };
    BaseStore.prototype.getGroup = function (uid) {
        if (this.itemsMap[uid]) {
            return this.itemsMap[uid];
        }
    };
    BaseStore.prototype.getItem = function (uid, id) {
        return this.itemsMap[uid].items[id];
    };
    BaseStore.prototype.setItem = function (uid, id, value) {
        this.itemsMap[uid].items[id] = value;
    };
    return BaseStore;
}());
exports.BaseStore = BaseStore;