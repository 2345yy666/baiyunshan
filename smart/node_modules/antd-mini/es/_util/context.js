"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Context = exports.ComponentContext = void 0;
/* eslint-disable @typescript-eslint/explicit-module-boundary-types */
/* eslint-disable @typescript-eslint/no-explicit-any */
var ComponentContext = /** @class */ (function () {
    function ComponentContext() {
        this.fns = [];
    }
    ComponentContext.prototype.get = function () {
        return this.value;
    };
    ComponentContext.prototype.update = function (value) {
        var _a;
        this.value = value;
        (_a = this.fns) === null || _a === void 0 ? void 0 : _a.forEach(function (fn) {
            fn(value);
        });
    };
    ComponentContext.prototype.onUpdate = function (fn) {
        this.fns.push(fn);
    };
    ComponentContext.prototype.clearEvent = function () {
        this.fns = [];
    };
    ComponentContext.prototype.offUpdate = function (fn) {
        this.fns = this.fns.filter(function (item) { return item !== fn; });
    };
    return ComponentContext;
}());
exports.ComponentContext = ComponentContext;
var Context = /** @class */ (function () {
    function Context() {
        this._values = {};
        this._fns = {};
    }
    Context.prototype.get = function (uid) {
        var _a;
        return (_a = this._values[uid]) !== null && _a !== void 0 ? _a : null;
    };
    Context.prototype.update = function (uid, value) {
        var _a;
        this._values[uid] = value;
        (_a = this._fns[uid]) === null || _a === void 0 ? void 0 : _a.forEach(function (fn) {
            fn(value);
        });
    };
    Context.prototype.updateValue = function (uid, value) {
        this._values[uid] = value;
    };
    Context.prototype.onUpdate = function (uid, fn) {
        if (!this._fns[uid]) {
            this._fns[uid] = [];
        }
        this._fns[uid].push(fn);
    };
    Context.prototype.clearEvent = function (uid) {
        delete this._fns[uid];
    };
    Context.prototype.offUpdate = function (uid, fn) {
        if (this._fns[uid]) {
            this._fns[uid] = this._fns[uid].filter(function (item) { return item !== fn; });
        }
    };
    return Context;
}());
exports.Context = Context;