"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isMoreThan106 = exports.compareAntdMiniVersion = exports.getCurrentVersion = exports.compareVersion = void 0;
/* eslint-disable no-console */
function compareVersion(v1, v2) {
    if (v1 === v2)
        return 0;
    var v1Arr = v1.split('.');
    var v2Arr = v2.split('.');
    var len = v1Arr.length < v2Arr.length ? v1Arr.length : v2Arr.length;
    var i = 0;
    while (i <= len) {
        if (v1Arr[i] === v2Arr[i]) {
            i++;
        }
        else if (!v1Arr[i] || !v2Arr[i]) {
            return v1Arr.length > v2Arr.length ? 1 : -1;
        }
        else {
            // eslint-disable-next-line no-nested-ternary
            return Number(v1Arr[i]) === Number(v2Arr[i])
                ? 0
                : Number(v1Arr[i]) > Number(v2Arr[i])
                    ? 1
                    : -1;
        }
    }
}
exports.compareVersion = compareVersion;
var currentVersion;
function getCurrentVersion() {
    if (typeof currentVersion === 'string')
        return currentVersion;
    try {
        // eslint-disable-next-line @typescript-eslint/no-var-requires
        var version = require('../../package.json').version;
        // 1.0.6 or 1.0.6-beat.1
        currentVersion = version.split('-')[0];
        return currentVersion;
    }
    catch (e) {
        console.log(e);
    }
}
exports.getCurrentVersion = getCurrentVersion;
/**
 * 检测 antd-mini 版本是否高于特定版本
 * @returns
 */
function compareAntdMiniVersion(version) {
    return compareVersion(getCurrentVersion(), version) > 0;
}
exports.compareAntdMiniVersion = compareAntdMiniVersion;
exports.isMoreThan106 = compareAntdMiniVersion('1.0.6');