"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var props_1 = require("./props");
var console_1 = require("../../_util/console");
var compareVersion_1 = require("../../_util/compareVersion");
var tabsStore_1 = require("../../_util/tabsStore");
var isBaseSwiper = (0, compareVersion_1.compareVersion)('2.0.0', my.SDKVersion) < 0 ? true : false;
Component({
    props: props_1.TabItemDefaultProps,
    data: {
        isBaseSwiper: isBaseSwiper,
        fallback: false
    },
    didMount: function () {
        var _this = this;
        // 更新 fallback 值
        var key = "".concat(this.$page.$id, "-").concat(this.props.uid);
        var setFallback = function (v) { return _this.setData({ fallback: v }); };
        // 注册 item
        var getTabsItemVal = function () { return _this.props.tab; };
        tabsStore_1.tabsStore.addItem(key, "".concat(this.$id), { setFallback: setFallback, getTabsItemVal: getTabsItemVal });
        // 更新视图
        // console.log(tabsStore)
        this.update();
    },
    didUpdate: function () {
        // 更新视图
        this.update();
    },
    didUnmount: function () {
        var key = "".concat(this.$page.$id, "-").concat(this.props.uid);
        tabsStore_1.tabsStore.removeItem(key, "".concat(this.$id));
    },
    methods: {
        _tabError: function (tab) {
            // 检测 tab-item 中的 tab 属性值正确性
            if (!tab || typeof tab !== 'object') {
                console_1.log.error('TabItem', "tab \u4E2D\u5B58\u6709\u6570\u636E\u7C7B\u578B\u9519\u8BEF\uFF0C\u5E94\u4E3A object\uFF0C\u5F53\u524D\u7684 tab \u5C5E\u6027\u503C\u7C7B\u578B\u4E3A ".concat(typeof tab, "\uFF0C\u503C\uFF1A").concat(tab));
            }
            else if (!(tab === null || tab === void 0 ? void 0 : tab.title)) {
                console_1.log.error('TabItem', "tab \u7684\u503C\u4E2D\u7F3A\u5C11\u5173\u952E title \u503C\uFF0C\u5F53\u524D\u7684 tab \u503C\u4E3A ".concat(JSON.stringify(tab)));
            }
        },
        update: function () {
            var key = "".concat(this.$page.$id, "-").concat(this.props.uid);
            var group = tabsStore_1.tabsStore.getGroup(key);
            if (group && group.setGroupDataVal)
                group.setGroupDataVal();
        }
    },
});