"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/* eslint-disable @typescript-eslint/no-explicit-any */
var props_1 = require("./props");
var context_1 = require("./context");
var tools_1 = require("../_util/tools");
Component({
    props: props_1.FilterDefaultProps,
    data: {
        placeHolderObj: {},
        activeObj: {},
        currentFilterItemId: '',
    },
    didMount: function () {
        var _this = this;
        var key = "".concat(this.$page.$id, "-").concat(this.props.uid);
        var setGroupDataVal = function (val) {
            switch (val.key) {
                case 'placeHolderArray':
                    _this.setData({
                        placeHolderObj: val.val,
                    });
                    break;
                case 'activeArray':
                    _this.setData({
                        activeObj: tslib_1.__assign(tslib_1.__assign({}, _this.data.activeObj), val.val),
                    });
                    break;
                case 'currentFilterItemId':
                    _this.setData({
                        currentFilterItemId: val.val,
                    });
                    break;
                default:
                    break;
            }
        };
        var getGroupDataVal = function () { return _this.data.placeHolderObj; };
        context_1.context.addGroup(key);
        context_1.context.setGroupDataVal(key, setGroupDataVal);
        context_1.context.getGroupDataVal(key, getGroupDataVal);
        context_1.context.updateGroupValue(key);
    },
    didUnmount: function () {
        var key = "".concat(this.$page.$id, "-").concat(this.props.uid);
        context_1.context.removeGroup(key);
    },
    methods: {
        showFilterItem: function (e) {
            var _this = this;
            var key = "".concat(this.$page.$id, "-").concat(this.props.uid);
            var group = context_1.context.getGroup(key);
            if (group) {
                (0, tools_1.objectEntries)(group.items).forEach(function (_a) {
                    var v = _a[1];
                    if (v.getid() === e.currentTarget.dataset.filterItemId) {
                        var show = v.getShow();
                        // 记录 filterItem 数据以重置
                        if (!show) {
                            if (v.isMult()) {
                                v.setPrevValue(v.getCurValue());
                            }
                            v.setShow(!show);
                            _this.setData({
                                currentFilterItemId: "".concat(v.getid()),
                            });
                            return;
                        }
                        v.setShow(!show);
                        _this.setData({
                            currentFilterItemId: '',
                        });
                    }
                    else {
                        v.getShow() && v.setShow(false);
                    }
                });
            }
        },
    },
});