"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var fast_deep_equal_1 = tslib_1.__importDefault(require("fast-deep-equal"));
var props_1 = require("./props");
var utils_1 = require("./utils");
var console_1 = require("../_util/console");
Component({
    data: {
        nextButtonVisible: false,
        lastButtonVisible: false,
        jumpButtonVisible: false,
        knowButtonVisible: false,
        current: 0,
    },
    props: props_1.GuideTourDefaultProps,
    didMount: function () {
        var index = this.props.index;
        if (typeof index !== 'number') {
            console_1.log.error('GuideTour', "\u5F53\u524D\u6FC0\u6D3B\u7684\u7D22\u5F15\u503C\u7C7B\u578B\u975E number \u7C7B\u578B\uFF0C\u4FEE\u6539\u5F53\u524D index \u7684 ".concat(typeof index, " \u7C7B\u578B\uFF0C\u4EE5\u4FDD\u8BC1\u5C55\u793A\u7684\u6B63\u786E\u6027\u3002"));
        }
        else {
            this.setData({ current: index });
            this.buttonController();
        }
    },
    didUpdate: function (prevProps) {
        var index = this.props.index;
        if ((prevProps.index !== index && index !== this.data.current) ||
            !(0, fast_deep_equal_1.default)(this.props.steps, prevProps.steps)) {
            this.setData({ current: index });
            this.buttonController();
        }
    },
    methods: {
        onNext: function () {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var _a, onChange, steps, current, _b;
                return tslib_1.__generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            _a = this.props, onChange = _a.onChange, steps = _a.steps;
                            current = this.data.current;
                            if (!(current < steps.length - 1)) return [3 /*break*/, 3];
                            _b = !onChange;
                            if (_b) return [3 /*break*/, 2];
                            return [4 /*yield*/, onChange(current + 1)];
                        case 1:
                            _b = (_c.sent()) !== false;
                            _c.label = 2;
                        case 2:
                            if (_b) {
                                this.setData({ current: current + 1 });
                                this.buttonController();
                            }
                            _c.label = 3;
                        case 3: return [2 /*return*/];
                    }
                });
            });
        },
        onPrev: function () {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var onChange, current, _a;
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            onChange = this.props.onChange;
                            current = this.data.current;
                            if (!(current !== 0)) return [3 /*break*/, 3];
                            _a = !onChange;
                            if (_a) return [3 /*break*/, 2];
                            return [4 /*yield*/, onChange(current - 1)];
                        case 1:
                            _a = (_b.sent()) !== false;
                            _b.label = 2;
                        case 2:
                            if (_a) {
                                this.setData({ current: current - 1 });
                                this.buttonController();
                            }
                            _b.label = 3;
                        case 3: return [2 /*return*/];
                    }
                });
            });
        },
        onCancel: function () {
            var onCancel = this.props.onCancel;
            if (onCancel) {
                onCancel();
            }
        },
        handleSwiperChange: function (e) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var current, onChange, _a;
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            current = e.detail.current;
                            onChange = this.props.onChange;
                            _a = !onChange;
                            if (_a) return [3 /*break*/, 2];
                            return [4 /*yield*/, onChange(current)];
                        case 1:
                            _a = (_b.sent()) !== false;
                            _b.label = 2;
                        case 2:
                            if (_a) {
                                this.setData({ current: current });
                                this.buttonController();
                            }
                            return [2 /*return*/];
                    }
                });
            });
        },
        buttonController: function () {
            var steps = this.props.steps;
            var current = this.data.current;
            if (steps.length === 1) {
                this.setData((0, utils_1.changeButtonVisible)(['knowButtonVisible']));
            }
            else {
                switch (current) {
                    case 0:
                        this.setData((0, utils_1.changeButtonVisible)(['jumpButtonVisible', 'nextButtonVisible']));
                        break;
                    case steps.length - 1:
                        this.setData((0, utils_1.changeButtonVisible)(['lastButtonVisible', 'knowButtonVisible']));
                        break;
                    default:
                        this.setData((0, utils_1.changeButtonVisible)(['lastButtonVisible', 'nextButtonVisible']));
                        break;
                }
            }
        },
    },
});