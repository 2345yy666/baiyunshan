"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var props_1 = require("./props");
var context_1 = require("./context");
var controlled_1 = tslib_1.__importDefault(require("../mixins/controlled"));
var form_1 = tslib_1.__importDefault(require("../mixins/form"));
var fmtEvent_1 = tslib_1.__importDefault(require("../_util/fmtEvent"));
Component({
    props: props_1.RadioGroupDefaultProps,
    mixins: [(0, controlled_1.default)(), (0, form_1.default)()],
    didMount: function () {
        var _this = this;
        var _a = this.props, uid = _a.uid, value = _a.value, disabled = _a.disabled;
        var key = "".concat(this.$page.$id, "-").concat(uid);
        // 用于触发 item.checked 更新
        context_1.componentValue.update(key, value);
        // 用于触发 item.disabled 更新
        context_1.componentDisabled.update(key, disabled);
        context_1.componentContext.onUpdate(key, function (v) {
            _this.cOnChange(v, (0, fmtEvent_1.default)(_this.props));
        });
    },
    didUpdate: function (prevProps) {
        var _a = this.props, disabled = _a.disabled, uid = _a.uid;
        var key = "".concat(this.$page.$id, "-").concat(uid);
        if (disabled !== prevProps.disabled) {
            context_1.componentDisabled.update(key, disabled);
        }
        context_1.componentValue.update(key, this.data.cValue);
    },
    didUnmount: function () {
        var uid = this.props.uid;
        var key = "".concat(this.$page.$id, "-").concat(uid);
        context_1.componentContext.clearEvent(key);
        context_1.componentDisabled.clearEvent(key);
        context_1.componentValue.clearEvent(key);
    },
});