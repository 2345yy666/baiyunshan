"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var props_1 = require("./props");
Component({
    props: props_1.TipsDefaultProps,
    data: {
        _show: false,
        textType: 'multi',
    },
    didMount: function () {
        this.setData({
            _show: this.props.visible,
        });
        this.getTextType();
    },
    didUpdate: function (prevProps) {
        if (prevProps.visible !== this.props.visible) {
            this.setData({
                _show: this.props.visible,
            });
            if (this.props.visible === false) {
                this.beforeClose();
            }
        }
        if (prevProps.title !== this.props.title) {
            this.getTextType();
        }
    },
    methods: {
        getTextType: function () {
            var _this = this;
            my.createSelectorQuery()
                .select(".amd-tips-".concat(this.$id, " .amd-tips-title"))
                .boundingClientRect()
                .exec(function (ret) {
                if (ret && ret[0] && ret[0].height) {
                    _this.setData({ textType: ret[0].height < 30 ? 'single' : 'multi' });
                }
            });
        },
        onButtonTap: function () {
            var onButtonTap = this.props.onButtonTap;
            if (onButtonTap) {
                return onButtonTap();
            }
        },
        onHideTips: function (t) {
            this.setData({
                _show: t,
            });
            this.beforeClose();
        },
        beforeClose: function () {
            if (typeof this.props.onClose === 'function') {
                this.props.onClose();
            }
        },
    },
});